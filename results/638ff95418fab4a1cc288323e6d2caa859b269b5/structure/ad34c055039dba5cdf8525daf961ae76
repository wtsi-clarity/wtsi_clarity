{"statement":[3,3,3,4,4,4,5,5,5,6,6,6,39,41,43,44,46,57,59,61,62,64,76,78,80,81,84,85,87,98,99,109,110,121,125,124,125,127,131,134,134,134,138,137,138,140,141,145,145,145,149,148,149,151,152,157,160,160,161,164,164,166,167,170,171,175,175,177,178,179,181,182,183,188,192,196,195,196,198,209,211,213,213,214,215,216,219,221,221,222,222,223,226,230,234,236,236,237,239,242,241,242,244,245,251,250,251,253,254,259],"digest":"ad34c055039dba5cdf8525daf961ae76","file":"blib/lib/wtsi_clarity/process_checks/bed_verifier.pm","pod":[[39,"verify"]],"branch":[[61,{"text":"if (not exists $self->config->{$step_name}) { }"}],[80,{"text":"if ($robot_bc eq '')"}],[84,{"text":"if (not exists $self->_step_config->{$robot_bc}) { }"}],[140,{"text":"if (scalar @unfilled_plates)"}],[151,{"text":"if (scalar @unfilled_beds)"}],[160,{"text":"if (scalar @{$self->beds;} == 0)"}],[166,{"text":"unless (exists $self->_robot_config->{$bed->bed_name})"}],[170,{"text":"if ($self->_robot_config->{$bed->bed_name} ne $bed->barcode)"}],[182,{"text":"if ($config_value ne $actual_value)"}],[181,{"text":"if ($config_value)"}],[221,{"text":"if (scalar @{$output_plates;} > 0) { }"}],[214,{"text":"if ($plate->is_input)"}],[244,{"text":"if ($matches != 1)"}],[250,{"text":"if $_->{'source_plate'} eq $plate_io->{'source_plate'}"}],[253,{"text":"if ($matches != 1)"}],[239,{"text":"if ($self->_input_only) { }"}]],"subroutine":[[3,"BEGIN"],[4,"BEGIN"],[5,"BEGIN"],[6,"BEGIN"],[39,"verify"],[57,"_build__step_config"],[76,"_build__robot_config"],[98,"_build_beds"],[109,"_build_plates"],[121,"_build__bed_plate_names"],[131,"_verify_barcodes_filled_out"],[157,"_verify_static_barcodes"],[192,"_find_plates_by_name"],[209,"_build__plate_mapping"],[234,"_verify_plate_mapping"]],"start":{"209":{"_build__plate_mapping":[{"time":null,"branch":10,"subroutine":13,"statement":79,"condition":null,"pod":1}]},"4":{"BEGIN":[{"branch":null,"time":null,"subroutine":1,"condition":null,"statement":3,"pod":null}]},"234":{"_verify_plate_mapping":[{"subroutine":14,"branch":12,"time":null,"pod":1,"condition":null,"statement":94}]},"76":{"_build__robot_config":[{"condition":null,"statement":22,"pod":1,"branch":1,"time":null,"subroutine":6}]},"109":{"_build_plates":[{"subroutine":8,"time":null,"branch":3,"pod":1,"statement":31,"condition":null}]},"3":{"BEGIN":[{"branch":null,"time":null,"subroutine":null,"condition":null,"statement":null,"pod":null}]},"121":{"_build__bed_plate_names":[{"condition":null,"statement":33,"pod":1,"branch":3,"time":null,"subroutine":9}]},"192":{"_find_plates_by_name":[{"branch":10,"time":null,"subroutine":12,"condition":null,"statement":74,"pod":1}]},"157":{"_verify_static_barcodes":[{"subroutine":11,"branch":5,"time":null,"pod":1,"condition":null,"statement":55}]},"6":{"BEGIN":[{"condition":null,"statement":9,"pod":null,"branch":null,"time":null,"subroutine":3}]},"98":{"_build_beds":[{"pod":1,"condition":null,"statement":29,"subroutine":7,"branch":3,"time":null}]},"131":{"_verify_barcodes_filled_out":[{"branch":3,"time":null,"subroutine":10,"condition":null,"statement":38,"pod":1}]},"5":{"BEGIN":[{"subroutine":2,"branch":null,"time":null,"pod":null,"condition":null,"statement":6}]},"57":{"_build__step_config":[{"branch":null,"time":null,"subroutine":5,"condition":null,"statement":17,"pod":1}]},"39":{"verify":[{"subroutine":4,"time":null,"branch":null,"pod":null,"statement":12,"condition":null}]},"-1":{"__COVER__":[{"pod":1,"condition":null,"statement":110,"subroutine":15,"branch":16,"time":null}]}}}