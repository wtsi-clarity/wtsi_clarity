{"statement":[3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,9,9,9,32,34,36,40,42,42,44,48,50,52,52,52,54,56,58,59,60,62,64,67,99,101,103,104,105,110,111,112,113,114,117,118,120,122,128,129,130,131,133,137,139,140,142,147,149,150,152,153,155,156,159,164,161,163,165,166,168,173,175,176,178,185,187,188,190,191,192,194,194,195,196,197,200,201,205,207,208,210,211,212,214,214,215,216,217,220,221,234,235,245,246,256,257,268,269,275,273,277,278,280,281,283,293,294,305,306,307,308,319,320,321,322],"subroutine":[[3,"BEGIN"],[4,"BEGIN"],[5,"BEGIN"],[6,"BEGIN"],[7,"BEGIN"],[9,"BEGIN"],[32,"_set_current_workflow"],[40,"_get_workflow_names"],[48,"_get_current_workflow_by_name"],[99,"_main_method"],[110,"_make_request"],[128,"_get_workflow_uri"],[137,"_get_id_from_uri"],[147,"_get_step_uri"],[161,"__ANON__"],[163,"__ANON__"],[173,"_is_step_in_correct_protocol"],[185,"_make_workflow_rerouting_request"],[205,"_make_step_rerouting_request"],[234,"_build__input_uris"],[245,"_build__workflow_base_uri"],[256,"_build__new_workflow_uri"],[268,"_build__new_protocol_uri"],[273,"__ANON__"],[293,"_build__new_step_uri"],[305,"_build__all_workflows_details"],[319,"_build__new_workflow_details"]],"file":"blib/lib/wtsi_clarity/epp/generic/workflow_assigner.pm","digest":"ef6e1d4f7d0f461d35b8cc34f4c8cca7","branch":[[58,{"text":"if ($size_of_filtered_names > 1) { }"}],[58,{"text":"elsif ($size_of_filtered_names == 1) { }"}],[104,{"text":"unless my $response = $self->request->post($post_uri, $req)"}],[112,{"text":"if (defined $self->new_step and defined $self->new_protocol) { }"}],[130,{"text":"if (scalar @workflows_nodes <= 0)"}],[139,{"text":"if ($uri =~ m[^.*/([^/]*)]msx)"}],[149,{"text":"unless (defined $self->new_step)"}],[152,{"text":"unless (defined $self->new_protocol)"}],[155,{"text":"unless (defined $self->_new_workflow_details)"}],[165,{"text":"unless (defined $step_uri)"}],[175,{"text":"unless my $stage_raw = $self->request->get($stage_uri)"}],[277,{"text":"if (scalar @uris > 1)"}],[280,{"text":"if (scalar @uris < 1)"}],[307,{"text":"unless my $workflows_raw = $self->request->get($workflows_uri)"}],[321,{"text":"unless my $workflows_raw = $self->request->get($workflows_uri)"}]],"condition":[[112,{"left":"defined $self->new_step","right":"defined $self->new_protocol","type":"and_3","op":"and"}]],"start":{"32":{"_set_current_workflow":[{"pod":null,"statement":18,"subroutine":6,"time":null,"branch":null,"condition":null}]},"234":{"_build__input_uris":[{"pod":null,"statement":105,"subroutine":19,"time":null,"branch":11,"condition":1}]},"245":{"_build__workflow_base_uri":[{"pod":null,"statement":107,"subroutine":20,"time":null,"branch":11,"condition":1}]},"7":{"BEGIN":[{"pod":null,"statement":12,"subroutine":4,"time":null,"branch":null,"condition":null}]},"48":{"_get_current_workflow_by_name":[{"pod":null,"statement":25,"subroutine":8,"time":null,"branch":null,"condition":null}]},"205":{"_make_step_rerouting_request":[{"pod":null,"statement":92,"subroutine":18,"time":null,"branch":11,"condition":1}]},"99":{"_main_method":[{"pod":null,"statement":38,"subroutine":9,"time":null,"branch":2,"condition":null}]},"110":{"_make_request":[{"pod":null,"statement":43,"subroutine":10,"time":null,"branch":3,"condition":null}]},"6":{"BEGIN":[{"pod":null,"statement":9,"subroutine":3,"time":null,"branch":null,"condition":null}]},"128":{"_get_workflow_uri":[{"pod":null,"statement":52,"subroutine":11,"time":null,"branch":4,"condition":1}]},"147":{"_get_step_uri":[{"pod":null,"statement":61,"subroutine":13,"time":null,"branch":6,"condition":1}]},"161":{"__ANON__":[{"pod":null,"statement":75,"subroutine":14,"time":null,"branch":10,"condition":1}]},"185":{"_make_workflow_rerouting_request":[{"pod":null,"statement":79,"subroutine":17,"time":null,"branch":11,"condition":1}]},"3":{"BEGIN":[{"pod":null,"statement":null,"subroutine":null,"time":null,"branch":null,"condition":null}]},"40":{"_get_workflow_names":[{"pod":null,"statement":21,"subroutine":7,"time":null,"branch":null,"condition":null}]},"273":{"__ANON__":[{"pod":null,"statement":120,"subroutine":23,"time":null,"branch":13,"condition":1}]},"305":{"_build__all_workflows_details":[{"pod":null,"statement":122,"subroutine":25,"time":null,"branch":13,"condition":1}]},"9":{"BEGIN":[{"pod":null,"statement":15,"subroutine":5,"time":null,"branch":null,"condition":null}]},"268":{"_build__new_protocol_uri":[{"pod":null,"statement":111,"subroutine":22,"time":null,"branch":11,"condition":1}]},"163":{"__ANON__":[{"pod":null,"statement":75,"subroutine":15,"time":null,"branch":10,"condition":1}]},"137":{"_get_id_from_uri":[{"pod":null,"statement":57,"subroutine":12,"time":null,"branch":5,"condition":1}]},"319":{"_build__new_workflow_details":[{"pod":null,"statement":126,"subroutine":26,"time":null,"branch":14,"condition":1}]},"4":{"BEGIN":[{"pod":null,"statement":3,"subroutine":1,"time":null,"branch":null,"condition":null}]},"173":{"_is_step_in_correct_protocol":[{"pod":null,"statement":75,"subroutine":16,"time":null,"branch":10,"condition":1}]},"256":{"_build__new_workflow_uri":[{"pod":null,"statement":109,"subroutine":21,"time":null,"branch":11,"condition":1}]},"293":{"_build__new_step_uri":[{"pod":null,"statement":120,"subroutine":24,"time":null,"branch":13,"condition":1}]},"5":{"BEGIN":[{"pod":null,"statement":6,"subroutine":2,"time":null,"branch":null,"condition":null}]},"-1":{"__COVER__":[{"pod":null,"statement":130,"subroutine":27,"time":null,"branch":15,"condition":1}]}}}