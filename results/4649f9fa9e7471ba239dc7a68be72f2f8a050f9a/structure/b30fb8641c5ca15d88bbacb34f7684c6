{"start":{"17":{"BEGIN":[{"branch":null,"condition":null,"pod":null,"time":null,"statement":39,"subroutine":13}]},"9":{"BEGIN":[{"statement":18,"subroutine":6,"condition":null,"pod":null,"branch":null,"time":null}]},"409":{"_from_cache":[{"subroutine":29,"statement":146,"time":null,"pod":6,"condition":9,"branch":26}]},"176":{"_build_useragent":[{"branch":null,"pod":null,"condition":4,"time":null,"statement":54,"subroutine":18}]},"102":{"_build_user":[{"pod":null,"condition":null,"branch":null,"time":null,"statement":42,"subroutine":14}]},"3":{"BEGIN":[{"statement":null,"subroutine":null,"condition":null,"pod":null,"branch":null,"time":null}]},"294":{"upload_file":[{"branch":11,"pod":4,"condition":6,"time":null,"statement":92,"subroutine":24}]},"8":{"BEGIN":[{"condition":null,"pod":null,"branch":null,"time":null,"statement":15,"subroutine":5}]},"12":{"BEGIN":[{"statement":27,"subroutine":9,"branch":null,"pod":null,"condition":null,"time":null}]},"383":{"_decorate_resource_name":[{"statement":133,"subroutine":27,"condition":9,"pod":6,"branch":21,"time":null}]},"4":{"BEGIN":[{"subroutine":1,"statement":3,"time":null,"pod":null,"condition":null,"branch":null}]},"327":{"_create_path":[{"subroutine":26,"statement":101,"time":null,"branch":15,"pod":6,"condition":6}]},"13":{"BEGIN":[{"subroutine":10,"statement":30,"time":null,"branch":null,"condition":null,"pod":null}]},"313":{"download_file":[{"subroutine":25,"statement":97,"time":null,"branch":13,"condition":6,"pod":5}]},"388":{"_check_cache_dir":[{"condition":9,"pod":6,"branch":21,"time":null,"statement":135,"subroutine":28}]},"229":{"post":[{"time":null,"branch":3,"pod":1,"condition":4,"subroutine":20,"statement":69}]},"254":{"_request":[{"statement":75,"subroutine":23,"branch":3,"pod":4,"condition":4,"time":null}]},"11":{"BEGIN":[{"statement":24,"subroutine":8,"condition":null,"pod":null,"branch":null,"time":null}]},"121":{"_build_ftpuser":[{"time":null,"branch":null,"pod":null,"condition":1,"subroutine":15,"statement":45}]},"487":{"BEGIN":[{"statement":196,"subroutine":33,"condition":15,"pod":6,"branch":42,"time":null}]},"-1":{"__COVER__":[{"time":null,"condition":15,"pod":6,"branch":42,"subroutine":33,"statement":196}]},"461":{"_error_message":[{"subroutine":31,"statement":176,"time":null,"condition":15,"pod":6,"branch":35}]},"159":{"_build_ftppassword":[{"statement":51,"subroutine":17,"pod":null,"condition":3,"branch":null,"time":null}]},"16":{"BEGIN":[{"statement":36,"subroutine":12,"condition":null,"pod":null,"branch":null,"time":null}]},"249":{"del":[{"statement":73,"subroutine":22,"condition":4,"pod":3,"branch":3,"time":null}]},"476":{"_write2cache":[{"time":null,"condition":15,"pod":6,"branch":36,"subroutine":32,"statement":184}]},"14":{"BEGIN":[{"subroutine":11,"statement":33,"time":null,"pod":null,"condition":null,"branch":null}]},"425":{"_from_web":[{"subroutine":30,"statement":156,"time":null,"branch":31,"pod":6,"condition":9}]},"6":{"BEGIN":[{"subroutine":3,"statement":9,"time":null,"condition":null,"pod":null,"branch":null}]},"5":{"BEGIN":[{"subroutine":2,"statement":6,"time":null,"condition":null,"pod":null,"branch":null}]},"7":{"BEGIN":[{"time":null,"branch":null,"condition":null,"pod":null,"subroutine":4,"statement":12}]},"218":{"get":[{"pod":null,"condition":4,"branch":3,"time":null,"statement":67,"subroutine":19}]},"239":{"put":[{"subroutine":21,"statement":71,"time":null,"condition":4,"pod":2,"branch":3}]},"10":{"BEGIN":[{"statement":21,"subroutine":7,"pod":null,"condition":null,"branch":null,"time":null}]},"139":{"_build_password":[{"subroutine":16,"statement":48,"time":null,"branch":null,"condition":2,"pod":null}]}},"file":"blib/lib/wtsi_clarity/util/request.pm","condition":[[103,{"op":"||","left":"$self->config->clarity_api->{'username'}","right":"croak('Cannot retrieve username from the configuration file')","type":"or_3"}],[122,{"right":"croak('Cannot retrieve ftp username from the configuration file')","type":"or_3","left":"$self->config->ftp_user->{'username'}","op":"||"}],[140,{"right":"croak('Cannot retrieve password from the configuration file')","left":"$self->config->clarity_api->{'password'}","type":"or_3","op":"||"}],[160,{"type":"or_3","right":"croak('Cannot retrieve ftp password from the configuration file')","left":"$self->config->ftp_user->{'password'}","op":"||"}],[256,{"op":"and","left":"$type","right":"$type =~ /GET|POST|PUT|DELETE/msx","type":"and_3"}],[272,{"left":"$cache","right":"!$ENV{$self->save2cache_dir_var_name}","type":"and_3","op":"&&"}],[351,{"left":"scalar @components >= 2","right":"$components[-2] eq 'batch'","type":"and_3","op":"and"}],[351,{"op":"and","type":"and_3","right":"$components[-1] eq 'retrieve'","left":"scalar @components >= 2 and $components[-2] eq 'batch'"}],[372,{"op":"||","left":"$ENV{$self->cache_dir_var_name}","right":"''","type":"or_2"}],[426,{"op":"and","type":"and_3","right":"$ENV{$self->save2cache_dir_var_name}","left":"$path"}],[426,{"op":"and","right":"$ENV{$self->cache_dir_var_name}","left":"$path and $ENV{$self->save2cache_dir_var_name}","type":"and_3"}],[452,{"op":"&&","right":"($res->is_success || $res->is_redirect)","type":"and_3","left":"defined $res->decoded_content"}],[452,{"op":"and","type":"and_3","left":"$self->ss_request","right":"not defined $res->decoded_content && ($res->is_success || $res->is_redirect)"}],[452,{"right":"$res->is_success","type":"or_3","left":"$self->ss_request","op":"||"}],[452,{"op":"or","left":"$self->ss_request and not defined $res->decoded_content && ($res->is_success || $res->is_redirect)","type":"or_3","right":"not $self->ss_request || $res->is_success"}]],"statement":[3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,16,16,16,17,17,17,102,103,105,121,122,124,139,140,142,159,160,162,176,177,178,180,181,182,183,184,187,188,190,193,195,218,220,229,230,239,240,249,250,254,256,257,258,261,262,264,265,266,267,268,272,276,277,280,281,284,294,295,299,300,303,313,315,320,323,327,328,330,332,333,335,336,338,339,341,344,346,347,348,349,351,354,357,358,362,364,364,365,366,367,369,371,372,374,374,375,377,383,384,388,390,391,393,394,396,397,398,401,402,405,409,411,412,415,416,417,417,418,419,421,425,426,427,429,430,433,434,437,438,439,440,441,444,445,445,446,449,452,454,457,461,462,468,465,466,467,469,472,476,478,479,480,481,484,487,488,489,489,490,491,487,487,487],"subroutine":[[3,"BEGIN"],[4,"BEGIN"],[5,"BEGIN"],[6,"BEGIN"],[7,"BEGIN"],[8,"BEGIN"],[9,"BEGIN"],[10,"BEGIN"],[11,"BEGIN"],[12,"BEGIN"],[13,"BEGIN"],[14,"BEGIN"],[16,"BEGIN"],[17,"BEGIN"],[102,"_build_user"],[121,"_build_ftpuser"],[139,"_build_password"],[159,"_build_ftppassword"],[176,"_build_useragent"],[218,"get"],[229,"post"],[239,"put"],[249,"del"],[254,"_request"],[294,"upload_file"],[313,"download_file"],[327,"_create_path"],[383,"_decorate_resource_name"],[388,"_check_cache_dir"],[409,"_from_cache"],[425,"_from_web"],[461,"_error_message"],[476,"_write2cache"],[487,"BEGIN"]],"digest":"b30fb8641c5ca15d88bbacb34f7684c6","pod":[[218,"get"],[229,"post"],[239,"put"],[249,"del"],[294,"upload_file"],[313,"download_file"]],"branch":[[177,{"text":"unless ($self->config->clarity_api->{'base_uri'})"}],[188,{"text":"if ($host_port =~ /http:/msx)"}],[184,{"text":"unless ($self->ss_request)"}],[257,{"text":"!defined($type) ? :"}],[256,{"text":"unless ($type and $type =~ /GET|POST|PUT|DELETE/msx)"}],[261,{"text":"$ENV{$self->cache_dir_var_name} ? :"}],[267,{"text":"unless ($path)"}],[264,{"text":"if ($cache)"}],[272,{"text":"$cache && !$ENV{$self->save2cache_dir_var_name} ? :"}],[276,{"text":"unless ($response)"}],[280,{"text":"if ($ENV{$self->save2cache_dir_var_name})"}],[295,{"text":"unless my $sftp = 'Net::SFTP::Foreign'->new($server, 'user', $self->ftpuser, 'password', $self->ftppassword)"}],[300,{"text":"unless $sftp->put($oldfilename, \"/$remote_directory/$newfilename\")"}],[315,{"text":"unless my $sftp = 'Net::SFTP::Foreign'->new($server, 'user', $self->ftpuser, 'password', $self->ftppassword)"}],[320,{"text":"unless $sftp->get($remote_path, $local_path)"}],[338,{"text":"if ($url =~ /$base_uri/msx) { }"}],[351,{"text":"if (scalar @components >= 2 and $components[-2] eq 'batch' and $components[-1] eq 'retrieve')"}],[357,{"text":"if ($content)"}],[365,{"text":"if (scalar @components > 2)"}],[374,{"text":"unless ($content)"}],[371,{"text":"if ($path) { }"}],[390,{"text":"unless (-e $cache)"}],[393,{"text":"unless (-d $cache)"}],[397,{"text":"unless (-w $cache)"}],[401,{"text":"unless (-r $cache)"}],[396,{"text":"if ($ENV{$self->save2cache_dir_var_name}) { }"}],[411,{"text":"unless (-e $path)"}],[416,{"text":"unless open my $fh, '<', $path"}],[417,{"text":"unless (defined $fh)"}],[418,{"text":"defined $fh ? :"}],[419,{"text":"unless close $fh"}],[433,{"text":"if ($result)"}],[426,{"text":"if ($path and $ENV{$self->save2cache_dir_var_name} and $ENV{$self->cache_dir_var_name})"}],[444,{"text":"if ($self->additional_headers)"}],[452,{"text":"if ($self->ss_request and not defined $res->decoded_content && ($res->is_success || $res->is_redirect) or not $self->ss_request || $res->is_success)"}],[468,{"text":"unless (eval {\n\tdo {\n\tmy $xml_msg = 'XML::LibXML'->new->load_xml('string', $decoded_content);\n$error_msg = $xml_msg->findnodes($EXCEPTION_MESSAGE_PATH)->pop->textContent;\n1\n}\n})"}],[480,{"text":"unless (-d $dir)"}],[479,{"text":"if (-e $dir) { }"}],[487,{"text":"unless open my $fh, '>:encoding(UTF-8)', $path"}],[488,{"text":"unless $fh"}],[489,{"text":"unless print {$fh;} $content"}],[490,{"text":"unless close $fh"}]]}