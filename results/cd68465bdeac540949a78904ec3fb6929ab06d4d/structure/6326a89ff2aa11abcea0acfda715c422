{"pod":[[41,"verify"]],"subroutine":[[3,"BEGIN"],[4,"BEGIN"],[5,"BEGIN"],[6,"BEGIN"],[41,"verify"],[59,"_build__step_config"],[78,"_build__robot_config"],[101,"_build_beds"],[113,"_build_plates"],[125,"_build__bed_plate_names"],[135,"_verify_barcodes_filled_out"],[161,"_verify_static_barcodes"],[196,"_find_plates_by_name"],[213,"_build__plate_mapping"],[238,"_verify_plate_mapping"]],"statement":[3,3,3,4,4,4,5,5,5,6,6,6,41,43,45,46,48,59,61,63,64,66,78,80,82,83,86,87,89,101,102,113,114,125,129,127,128,131,135,138,138,138,142,140,141,144,145,149,149,149,153,151,152,155,156,161,164,164,165,168,168,170,171,174,175,179,179,181,182,183,185,186,187,192,196,200,198,199,202,213,215,217,217,218,219,220,223,225,225,226,226,227,230,234,238,240,240,241,243,246,244,245,248,249,255,253,254,257,258,263],"file":"blib/lib/wtsi_clarity/process_checks/bed_verifier.pm","digest":"6326a89ff2aa11abcea0acfda715c422","branch":[[63,{"text":"if (not exists $self->config->{$step_name}) { }"}],[82,{"text":"if ($robot_bc eq '')"}],[86,{"text":"if (not exists $self->_step_config->{$robot_bc}) { }"}],[144,{"text":"if (scalar @unfilled_plates)"}],[155,{"text":"if (scalar @unfilled_beds)"}],[164,{"text":"if (scalar @{$self->beds;} == 0)"}],[170,{"text":"unless (exists $self->_robot_config->{$bed->bed_name})"}],[174,{"text":"if ($self->_robot_config->{$bed->bed_name} ne $bed->barcode)"}],[186,{"text":"if ($config_value ne $actual_value)"}],[185,{"text":"if ($config_value)"}],[225,{"text":"if (scalar @{$output_plates;} > 0) { }"}],[218,{"text":"if ($plate->is_input)"}],[248,{"text":"if ($matches != 1)"}],[253,{"text":"if $$_{'source_plate'} eq $$plate_io{'source_plate'}"}],[257,{"text":"if ($matches != 1)"}],[243,{"text":"if ($self->_input_only) { }"}]],"start":{"78":{"_build__robot_config":[{"pod":1,"subroutine":6,"statement":22,"time":null,"branch":1,"condition":null}]},"125":{"_build__bed_plate_names":[{"pod":1,"subroutine":9,"statement":33,"time":null,"branch":3,"condition":null}]},"6":{"BEGIN":[{"pod":null,"subroutine":3,"statement":9,"time":null,"branch":null,"condition":null}]},"238":{"_verify_plate_mapping":[{"pod":1,"subroutine":14,"statement":94,"time":null,"branch":12,"condition":null}]},"161":{"_verify_static_barcodes":[{"pod":1,"subroutine":11,"statement":55,"time":null,"branch":5,"condition":null}]},"3":{"BEGIN":[{"pod":null,"subroutine":null,"statement":null,"time":null,"branch":null,"condition":null}]},"213":{"_build__plate_mapping":[{"pod":1,"subroutine":13,"statement":79,"time":null,"branch":10,"condition":null}]},"41":{"verify":[{"pod":null,"subroutine":4,"statement":12,"time":null,"branch":null,"condition":null}]},"135":{"_verify_barcodes_filled_out":[{"pod":1,"subroutine":10,"statement":38,"time":null,"branch":3,"condition":null}]},"59":{"_build__step_config":[{"pod":1,"subroutine":5,"statement":17,"time":null,"branch":null,"condition":null}]},"4":{"BEGIN":[{"pod":null,"subroutine":1,"statement":3,"time":null,"branch":null,"condition":null}]},"101":{"_build_beds":[{"pod":1,"subroutine":7,"statement":29,"time":null,"branch":3,"condition":null}]},"196":{"_find_plates_by_name":[{"pod":1,"subroutine":12,"statement":74,"time":null,"branch":10,"condition":null}]},"5":{"BEGIN":[{"pod":null,"subroutine":2,"statement":6,"time":null,"branch":null,"condition":null}]},"-1":{"__COVER__":[{"pod":1,"subroutine":15,"statement":110,"time":null,"branch":16,"condition":null}]},"113":{"_build_plates":[{"pod":1,"subroutine":8,"statement":31,"time":null,"branch":3,"condition":null}]}}}